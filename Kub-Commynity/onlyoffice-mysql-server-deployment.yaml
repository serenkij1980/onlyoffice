apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.groups.yml
    kompose.version: 1.26.1 (a9d05d509)  
  labels:
    io.kompose.service: onlyoffice-mysql-server
  name: onlyoffice-mysql-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: onlyoffice-mysql-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.groups.yml
        kompose.version: 1.26.1 (a9d05d509)      
      labels:
        io.kompose.network/onlyoffice: "true"
        io.kompose.service: onlyoffice-mysql-server
    spec:    
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: my-secret-pw
          image: mysql:5.7
          name: onlyoffice-mysql-server         
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /etc/mysql/conf.d
              name: onlyoffice-mysql-server-claim0
            - mountPath: /docker-entrypoint-initdb.d
              name: onlyoffice-mysql-server-claim1
            - mountPath: /var/lib/mysql
              name: mysql-data
      restartPolicy: Always
      volumes:
        - name: onlyoffice-mysql-server-claim0
          persistentVolumeClaim:
            claimName: onlyoffice-mysql-server-claim0
        - name: onlyoffice-mysql-server-claim1
          persistentVolumeClaim:
            claimName: onlyoffice-mysql-server-claim1
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
status: {}